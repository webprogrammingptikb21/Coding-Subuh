{
  "version": 3,
  "sources": ["../../@tsparticles/engine/browser/Core/Utils/Constants.js", "../../@tsparticles/engine/browser/Enums/Directions/MoveDirection.js", "../../@tsparticles/engine/browser/Utils/TypeUtils.js", "../../@tsparticles/engine/browser/Core/Utils/Vectors.js", "../../@tsparticles/engine/browser/Utils/NumberUtils.js", "../../@tsparticles/engine/browser/Enums/Modes/AnimationMode.js", "../../@tsparticles/engine/browser/Enums/AnimationStatus.js", "../../@tsparticles/engine/browser/Enums/Types/DestroyType.js", "../../@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js", "../../@tsparticles/engine/browser/Enums/Modes/PixelMode.js", "../../@tsparticles/engine/browser/Enums/Types/StartValueType.js", "../../@tsparticles/engine/browser/Utils/Utils.js", "../../@tsparticles/engine/browser/Enums/Types/AlterType.js", "../../@tsparticles/engine/browser/Utils/ColorUtils.js", "../../@tsparticles/engine/browser/Utils/CanvasUtils.js", "../../@tsparticles/engine/browser/Core/Canvas.js", "../../@tsparticles/engine/browser/Enums/InteractivityDetect.js", "../../@tsparticles/engine/browser/Core/Utils/EventListeners.js", "../../@tsparticles/engine/browser/Enums/Types/EventType.js", "../../@tsparticles/engine/browser/Options/Classes/OptionsColor.js", "../../@tsparticles/engine/browser/Options/Classes/Background/Background.js", "../../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js", "../../@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js", "../../@tsparticles/engine/browser/Enums/Types/DivType.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js", "../../@tsparticles/engine/browser/Options/Classes/ManualParticle.js", "../../@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js", "../../@tsparticles/engine/browser/Options/Classes/Responsive.js", "../../@tsparticles/engine/browser/Enums/Modes/ThemeMode.js", "../../@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js", "../../@tsparticles/engine/browser/Options/Classes/Theme/Theme.js", "../../@tsparticles/engine/browser/Options/Classes/AnimationOptions.js", "../../@tsparticles/engine/browser/Options/Classes/ColorAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/HslAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/AnimatableColor.js", "../../@tsparticles/engine/browser/Enums/Modes/CollisionMode.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js", "../../@tsparticles/engine/browser/Enums/Modes/OutMode.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js", "../../@tsparticles/engine/browser/Enums/Modes/LimitMode.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js", "../../@tsparticles/engine/browser/Utils/OptionsUtils.js", "../../@tsparticles/engine/browser/Options/Classes/Options.js", "../../@tsparticles/engine/browser/Enums/Types/InteractorType.js", "../../@tsparticles/engine/browser/Core/Utils/InteractionManager.js", "../../@tsparticles/engine/browser/Enums/Types/ParticleOutType.js", "../../@tsparticles/engine/browser/Core/Particle.js", "../../@tsparticles/engine/browser/Core/Utils/Point.js", "../../@tsparticles/engine/browser/Types/RangeType.js", "../../@tsparticles/engine/browser/Core/Utils/Ranges.js", "../../@tsparticles/engine/browser/Core/Utils/QuadTree.js", "../../@tsparticles/engine/browser/Core/Particles.js", "../../@tsparticles/engine/browser/Core/Retina.js", "../../@tsparticles/engine/browser/Core/Container.js", "../../@tsparticles/engine/browser/Utils/EventDispatcher.js", "../../@tsparticles/engine/browser/Core/Engine.js", "../../@tsparticles/engine/browser/Utils/HslColorManager.js", "../../@tsparticles/engine/browser/Utils/RgbColorManager.js", "../../@tsparticles/engine/browser/init.js", "../../@tsparticles/engine/browser/Enums/Directions/RotateDirection.js", "../../@tsparticles/engine/browser/Enums/Types/GradientType.js", "../../@tsparticles/engine/browser/Enums/Types/EasingType.js", "../../@tsparticles/engine/browser/index.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js", "../../@tsparticles/plugin-emitters/browser/Enums/EmitterClickMode.js", "../../@tsparticles/plugin-emitters/browser/EmitterInstance.js", "../../@tsparticles/plugin-emitters/browser/Emitters.js", "../../@tsparticles/plugin-emitters/browser/EmittersPlugin.js", "../../@tsparticles/plugin-emitters/browser/ShapeManager.js", "../../@tsparticles/plugin-emitters/browser/index.js", "../../@tsparticles/confetti/browser/ConfettiOptions.js", "../../@tsparticles/move-base/browser/Utils.js", "../../@tsparticles/move-base/browser/BaseMover.js", "../../@tsparticles/move-base/browser/index.js", "../../@tsparticles/shape-circle/browser/Utils.js", "../../@tsparticles/shape-circle/browser/CircleDrawer.js", "../../@tsparticles/shape-circle/browser/index.js", "../../@tsparticles/updater-color/browser/ColorUpdater.js", "../../@tsparticles/updater-color/browser/index.js", "../../@tsparticles/updater-opacity/browser/OpacityUpdater.js", "../../@tsparticles/updater-opacity/browser/index.js", "../../@tsparticles/updater-out-modes/browser/Utils.js", "../../@tsparticles/updater-out-modes/browser/BounceOutMode.js", "../../@tsparticles/updater-out-modes/browser/DestroyOutMode.js", "../../@tsparticles/updater-out-modes/browser/NoneOutMode.js", "../../@tsparticles/updater-out-modes/browser/OutOutMode.js", "../../@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js", "../../@tsparticles/updater-out-modes/browser/index.js", "../../@tsparticles/updater-size/browser/SizeUpdater.js", "../../@tsparticles/updater-size/browser/index.js", "../../@tsparticles/basic/browser/index.js", "../../@tsparticles/shape-cards/browser/Utils.js", "../../@tsparticles/shape-cards/browser/ClubDrawer.js", "../../@tsparticles/shape-cards/browser/DiamondDrawer.js", "../../@tsparticles/shape-cards/browser/HeartDrawer.js", "../../@tsparticles/shape-cards/browser/SpadeDrawer.js", "../../@tsparticles/shape-cards/browser/index.js", "../../@tsparticles/shape-emoji/browser/Utils.js", "../../@tsparticles/shape-emoji/browser/EmojiDrawer.js", "../../@tsparticles/shape-emoji/browser/index.js", "../../@tsparticles/shape-heart/browser/Utils.js", "../../@tsparticles/shape-heart/browser/HeartDrawer.js", "../../@tsparticles/shape-heart/browser/index.js", "../../@tsparticles/shape-image/browser/Utils.js", "../../@tsparticles/shape-image/browser/GifUtils/Constants.js", "../../@tsparticles/shape-image/browser/GifUtils/ByteStream.js", "../../@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js", "../../@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js", "../../@tsparticles/shape-image/browser/GifUtils/Utils.js", "../../@tsparticles/shape-image/browser/ImageDrawer.js", "../../@tsparticles/shape-image/browser/Options/Classes/Preload.js", "../../@tsparticles/shape-image/browser/ImagePreloader.js", "../../@tsparticles/shape-image/browser/index.js", "../../@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js", "../../@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js", "../../@tsparticles/updater-life/browser/Options/Classes/Life.js", "../../@tsparticles/updater-life/browser/Utils.js", "../../@tsparticles/updater-life/browser/LifeUpdater.js", "../../@tsparticles/updater-life/browser/index.js", "../../@tsparticles/plugin-motion/browser/Options/Classes/MotionReduce.js", "../../@tsparticles/plugin-motion/browser/Options/Classes/Motion.js", "../../@tsparticles/plugin-motion/browser/MotionInstance.js", "../../@tsparticles/plugin-motion/browser/MotionPlugin.js", "../../@tsparticles/plugin-motion/browser/index.js", "../../@tsparticles/shape-polygon/browser/Utils.js", "../../@tsparticles/shape-polygon/browser/PolygonDrawerBase.js", "../../@tsparticles/shape-polygon/browser/PolygonDrawer.js", "../../@tsparticles/shape-polygon/browser/TriangleDrawer.js", "../../@tsparticles/shape-polygon/browser/index.js", "../../@tsparticles/updater-roll/browser/RollMode.js", "../../@tsparticles/updater-roll/browser/Utils.js", "../../@tsparticles/updater-roll/browser/Options/Classes/RollLight.js", "../../@tsparticles/updater-roll/browser/Options/Classes/Roll.js", "../../@tsparticles/updater-roll/browser/RollUpdater.js", "../../@tsparticles/updater-roll/browser/index.js", "../../@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js", "../../@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js", "../../@tsparticles/updater-rotate/browser/RotateUpdater.js", "../../@tsparticles/updater-rotate/browser/index.js", "../../@tsparticles/shape-square/browser/Utils.js", "../../@tsparticles/shape-square/browser/SquareDrawer.js", "../../@tsparticles/shape-square/browser/index.js", "../../@tsparticles/shape-star/browser/Utils.js", "../../@tsparticles/shape-star/browser/StarDrawer.js", "../../@tsparticles/shape-star/browser/index.js", "../../@tsparticles/updater-tilt/browser/TiltDirection.js", "../../@tsparticles/updater-tilt/browser/Options/Classes/TiltAnimation.js", "../../@tsparticles/updater-tilt/browser/Options/Classes/Tilt.js", "../../@tsparticles/updater-tilt/browser/TiltUpdater.js", "../../@tsparticles/updater-tilt/browser/index.js", "../../@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js", "../../@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js", "../../@tsparticles/updater-wobble/browser/Utils.js", "../../@tsparticles/updater-wobble/browser/WobbleUpdater.js", "../../@tsparticles/updater-wobble/browser/index.js", "../../@tsparticles/confetti/browser/confetti.js"],
  "sourcesContent": ["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\nexport const percentDenominator = 100;\nexport const halfRandom = 0.5;\nexport const millisecondsToSeconds = 1000;\n", "export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n", "export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n", "import { errorPrefix } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, squareExp = 2, inverseFactorNumerator = 1.0;\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : origin.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? origin.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(origin.x, origin.y, origin.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length, noLength = 0;\n        if (length != noLength) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), origin.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : origin.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, origin.z);\n    }\n    static get origin() {\n        return Vector.create(origin.x, origin.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n", "import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nimport { percentDenominator } from \"../Core/Utils/Constants.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n}, easingFunctions = new Map(), double = 2, doublePI = Math.PI * double;\nexport function addEasing(name, easing) {\n    if (easingFunctions.get(name)) {\n        return;\n    }\n    easingFunctions.set(name, easing);\n}\nexport function getEasing(name) {\n    return easingFunctions.get(name) ?? ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    const empty = 0, half = 0.5, quarter = 0.25, threeQuarter = half + quarter;\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    const double = 2;\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n", "export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n", "export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n", "export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n", "export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n", "export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n", "export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n", "import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { halfRandom, millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data, half = 0.5, minVelocity = 0;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n", "export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed), radix = 16, defaultAlpha = 1, alphaFactor = 0xff;\n    return result\n        ? {\n            a: result[RgbIndexes.a] !== undefined\n                ? parseInt(result[RgbIndexes.a], radix) / alphaFactor\n                : defaultAlpha,\n            b: parseInt(result[RgbIndexes.b], radix),\n            g: parseInt(result[RgbIndexes.g], radix),\n            r: parseInt(result[RgbIndexes.r], radix),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, half = 0.5, double = 2, r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const hMax = 360, sMax = 100, lMax = 100, sMin = 0, lMin = 0, h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax, rgbFactor = 255, triple = 3;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const half = 0.5, double = 2, channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1, sextuple = 6;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, sNormalizedOffset = 1, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseNumerator = 1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const defaultMin = 0, fixedMin = min ?? defaultMin, rgbMax = 256;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    const defaultOpacity = 1;\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    const defaultOpacity = 1;\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    const defaultVelocity = 0, decayOffset = 1, defaultLoops = 0, defaultTime = 0;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    const ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n", "import { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nconst origin = { x: 0, y: 0 }, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n};\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, origin.x, origin.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), defaultAngle = 0, angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, identity = 1, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : transform.b ?? defaultTransform.b,\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : transform.c ?? defaultTransform.c,\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const minStrokeWidth = 0, strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data, minStrokeWidth = 0;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    const lFactor = 1;\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n", "export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n", "import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n", "export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n", "import { isArray, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nimport { isString } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n", "import { DivType } from \"../../../../Enums/Types/DivType.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n", "export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n", "import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n", "import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nconst defaultPosition = 50;\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? defaultPosition,\n                y: data.position.y ?? defaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n", "import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n", "import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n", "import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { isArray, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n", "export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n", "import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n", "import { MoveTrailFill } from \"./MoveTrailFill.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n", "import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n", "import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n", "export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n", "export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n", "import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n", "import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n", "export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n", "export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n", "import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2, randomString = \"random\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomString) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomString) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n", "import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst squareExp = 2;\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n", "import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n", "import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n", "import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n", "import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e, lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this), minIndex = 0;\n            if (idx >= minIndex) {\n                const deleteCount = 1;\n                mainArr.splice(idx, deleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n", "export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener), minIndex = 0;\n        if (idx < minIndex) {\n            return;\n        }\n        const deleteCount = 1;\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n", "import { errorPrefix, generatedAttribute } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            const firstIndex = 0;\n            canvasEl = existingCanvases[firstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.5.0\";\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            const deleteCount = 1;\n            items.splice(index, deleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const randomFactor = 10000, id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * randomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), minIndex = 0, newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= minIndex) {\n            const old = this.item(oldIndex), one = 1, none = 0, deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils.js\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n", "import { Engine } from \"./Core/Engine.js\";\nimport { HslColorManager } from \"./Utils/HslColorManager.js\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager.js\";\nimport { addColorManager } from \"./Utils/ColorUtils.js\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n", "export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n", "export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n", "export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n", "import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n", "import { setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n", "import { setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n", "export class EmitterShapeReplace {\n    constructor() {\n        this.color = false;\n        this.opacity = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { deepExtend } from \"@tsparticles/engine\";\nimport { EmitterShapeReplace } from \"./EmitterShapeReplace.js\";\nexport class EmitterShape {\n    constructor() {\n        this.options = {};\n        this.replace = new EmitterShapeReplace();\n        this.type = \"square\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options ?? {});\n        }\n        this.replace.load(data.replace);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { PixelMode } from \"@tsparticles/engine\";\nexport class EmitterSize {\n    constructor() {\n        this.mode = PixelMode.percent;\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue, } from \"@tsparticles/engine\";\nimport { EmitterLife } from \"./EmitterLife.js\";\nimport { EmitterRate } from \"./EmitterRate.js\";\nimport { EmitterShape } from \"./EmitterShape.js\";\nimport { EmitterSize } from \"./EmitterSize.js\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = new EmitterShape();\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        this.shape.load(data.shape);\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n", "export var EmitterClickMode;\n(function (EmitterClickMode) {\n    EmitterClickMode[\"emitter\"] = \"emitter\";\n})(EmitterClickMode || (EmitterClickMode = {}));\n", "import { PixelMode, Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, millisecondsToSeconds, randomInRange, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize.js\";\nconst half = 0.5, defaultLifeDelay = 0, minLifeCount = 0, defaultSpawnDelay = 0, defaultEmitDelay = 0, defaultLifeCount = -1, defaultColorAnimationFactor = 1;\nfunction setParticlesOptionsColor(particlesOptions, color) {\n    if (particlesOptions.color) {\n        particlesOptions.color.value = color;\n    }\n    else {\n        particlesOptions.color = {\n            value: color,\n        };\n    }\n}\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._destroy = () => {\n            this._mutationObserver?.disconnect();\n            this._mutationObserver = undefined;\n            this._resizeObserver?.disconnect();\n            this._resizeObserver = undefined;\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined, minDuration = 0, minLifeCount = 0;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > minLifeCount || this._immortal) &&\n                duration !== undefined &&\n                duration > minDuration) {\n                this._duration = duration * millisecondsToSeconds;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue, factor = defaultColorAnimationFactor) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (delay * millisecondsToSeconds) / container.retina.reduceFactor, defaultColorSpeed = 0, colorSpeed = getRangeValue(animation.speed ?? defaultColorSpeed);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * factor) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay =\n            (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._lifeCount = this.options.life.count ?? defaultLifeCount;\n        this._immortal = this._lifeCount <= minLifeCount;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                this._mutationObserver = new MutationObserver(() => {\n                    this.resize();\n                });\n                this._resizeObserver = new ResizeObserver(() => {\n                    this.resize();\n                });\n                this._mutationObserver.observe(element, {\n                    attributes: true,\n                    attributeFilter: [\"style\", \"width\", \"height\"],\n                });\n                this._resizeObserver.observe(element);\n            }\n        }\n        const shapeOptions = this.options.shape, shapeGenerator = this._engine.emitterShapeManager?.getShapeGenerator(shapeOptions.type);\n        if (shapeGenerator) {\n            this._shape = shapeGenerator.generate(this.position, this.size, this.fill, shapeOptions.options);\n        }\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    async init() {\n        await this._shape?.init();\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > minLifeCount || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? defaultSpawnDelay)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > minLifeCount || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._shape?.resize(this.position, this.size);\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? defaultSpawnDelay;\n            this._currentEmitDelay = this._emitDelay ?? defaultEmitDelay;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > minLifeCount || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._shape?.resize(this.position, this.size);\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                            this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    _calcPosition() {\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect(), pxRatio = this.container.retina.pixelRatio;\n                return {\n                    x: (elRect.x + elRect.width * half) * pxRatio,\n                    y: (elRect.y + elRect.height * half) * pxRatio,\n                };\n            }\n        }\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    _calcSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                    mode: PixelMode.precise,\n                };\n            }\n        }\n        return (this.options.size ??\n            (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: PixelMode.percent,\n                    width: 0,\n                });\n                return size;\n            })());\n    }\n    _emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this._emitParticles(quantity);\n    }\n    _emitParticles(quantity) {\n        const singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = this.options.spawnColor?.animation;\n                if (hslAnimation) {\n                    const maxValues = {\n                        h: 360,\n                        s: 100,\n                        l: 100,\n                    }, colorFactor = 3.6;\n                    this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, maxValues.h, colorFactor);\n                    this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, maxValues.s);\n                    this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, maxValues.l);\n                }\n                setParticlesOptionsColor(particlesOptions, this.spawnColor);\n            }\n            const shapeOptions = this.options.shape;\n            let position = this.position;\n            if (this._shape) {\n                const shapePosData = this._shape.randomPosition();\n                if (shapePosData) {\n                    position = shapePosData.position;\n                    const replaceData = shapeOptions.replace;\n                    if (replaceData.color && shapePosData.color) {\n                        setParticlesOptionsColor(particlesOptions, shapePosData.color);\n                    }\n                    if (replaceData.opacity) {\n                        if (particlesOptions.opacity) {\n                            particlesOptions.opacity.value = shapePosData.opacity;\n                        }\n                        else {\n                            particlesOptions.opacity = {\n                                value: shapePosData.opacity,\n                            };\n                        }\n                    }\n                }\n                else {\n                    position = null;\n                }\n            }\n            if (position) {\n                this.container.particles.addParticle(position, particlesOptions);\n            }\n        }\n    }\n}\n", "import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { EmitterInstance } from \"./EmitterInstance.js\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        const defaultIndex = 0;\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addEmitter = async (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    async addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        await emitter.init();\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== EmitterClickMode.emitter) {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            const minLength = 0;\n            if (modeEmitters.value.length > minLength && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        void executeOnSingleOrMultiple(emittersOptions, async (emitter) => {\n            await this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                await this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            await this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter), minIndex = 0, deleteCount = 1;\n        if (index >= minIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { Emitters } from \"./Emitters.js\";\nexport class EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new Emitters(this._engine, container));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, emitter => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map(s => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    const defaultCount = 1;\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map(s => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(EmitterClickMode.emitter, options.interactivity.events.onClick.mode)));\n    }\n}\n", "const shapeGeneratorss = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShapeGenerator(name, generator) {\n        if (!this.getShapeGenerator(name)) {\n            shapeGeneratorss.set(name, generator);\n        }\n    }\n    getShapeGenerator(name) {\n        return shapeGeneratorss.get(name);\n    }\n    getSupportedShapeGenerators() {\n        return shapeGeneratorss.keys();\n    }\n}\n", "import { EmittersPlugin } from \"./EmittersPlugin.js\";\nimport { ShapeManager } from \"./ShapeManager.js\";\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShapeGenerator) {\n        engine.addEmitterShapeGenerator = (name, generator) => {\n            engine.emitterShapeManager?.addShapeGenerator(name, generator);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\nexport * from \"./EmitterContainer.js\";\nexport * from \"./EmitterShapeBase.js\";\nexport * from \"./EmittersEngine.js\";\nexport * from \"./IEmitterShape.js\";\nexport * from \"./IEmitterShapeGenerator.js\";\nexport * from \"./Enums/EmitterClickMode.js\";\nexport * from \"./IRandomPositionData.js\";\n", "import { deepExtend, isArray, percentDenominator, } from \"@tsparticles/engine\";\nexport class ConfettiOptions {\n    constructor() {\n        this.angle = 90;\n        this.count = 50;\n        this.spread = 45;\n        this.startVelocity = 45;\n        this.decay = 0.9;\n        this.gravity = 1;\n        this.drift = 0;\n        this.ticks = 200;\n        this.position = {\n            x: 50,\n            y: 50,\n        };\n        this.colors = [\"#26ccff\", \"#a25afd\", \"#ff5e7e\", \"#88ff5a\", \"#fcff42\", \"#ffa62d\", \"#ff36ff\"];\n        this.shapes = [\"square\", \"circle\"];\n        this.scalar = 1;\n        this.zIndex = 100;\n        this.disableForReducedMotion = true;\n        this.flat = false;\n        this.shapeOptions = {};\n    }\n    get origin() {\n        return {\n            x: this.position.x / percentDenominator,\n            y: this.position.y / percentDenominator,\n        };\n    }\n    set origin(value) {\n        this.position.x = value.x * percentDenominator;\n        this.position.y = value.y * percentDenominator;\n    }\n    get particleCount() {\n        return this.count;\n    }\n    set particleCount(value) {\n        this.count = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = data.angle;\n        }\n        const count = data.count ?? data.particleCount;\n        if (count !== undefined) {\n            this.count = count;\n        }\n        if (data.spread !== undefined) {\n            this.spread = data.spread;\n        }\n        if (data.startVelocity !== undefined) {\n            this.startVelocity = data.startVelocity;\n        }\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.flat !== undefined) {\n            this.flat = data.flat;\n        }\n        if (data.gravity !== undefined) {\n            this.gravity = data.gravity;\n        }\n        if (data.drift !== undefined) {\n            this.drift = data.drift;\n        }\n        if (data.ticks !== undefined) {\n            this.ticks = data.ticks;\n        }\n        const origin = data.origin;\n        if (origin && !data.position) {\n            data.position = {\n                x: origin.x !== undefined ? origin.x * percentDenominator : undefined,\n                y: origin.y !== undefined ? origin.y * percentDenominator : undefined,\n            };\n        }\n        const position = data.position;\n        if (position) {\n            if (position.x !== undefined) {\n                this.position.x = position.x;\n            }\n            if (position.y !== undefined) {\n                this.position.y = position.y;\n            }\n        }\n        if (data.colors !== undefined) {\n            if (isArray(data.colors)) {\n                this.colors = [...data.colors];\n            }\n            else {\n                this.colors = data.colors;\n            }\n        }\n        const options = data.shapeOptions;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.shapeOptions[shape] = deepExtend(this.shapeOptions[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.shapes !== undefined) {\n            if (isArray(data.shapes)) {\n                this.shapes = [...data.shapes];\n            }\n            else {\n                this.shapes = data.shapes;\n            }\n        }\n        if (data.scalar !== undefined) {\n            this.scalar = data.scalar;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n        if (data.disableForReducedMotion !== undefined) {\n            this.disableForReducedMotion = data.disableForReducedMotion;\n        }\n    }\n}\n", "import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === RotateDirection.clockwise ? Math.cos : Math.sin,\n        y: particle.spin.direction === RotateDirection.clockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    const minVelocity = 0;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: particle.velocity.angle,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n", "import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n", "import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n", "const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n", "import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n", "import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n", "import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n", "import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container));\n    }, refresh);\n}\n", "import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n", "import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n", "import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n", "import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n", "import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n", "import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n", "import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n", "import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = [];\n    }\n    init(particle) {\n        this.updaters = [];\n        const outModes = particle.options.move.outModes;\n        if (checkOutMode(outModes, OutMode.bounce)) {\n            this.updaters.push(new BounceOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.out)) {\n            this.updaters.push(new OutOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.destroy)) {\n            this.updaters.push(new DestroyOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.none)) {\n            this.updaters.push(new NoneOutMode(this.container));\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n", "import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n", "import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n", "import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n", "import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n", "export function drawPath(data, path) {\n    if (!path.segments.length || !path.segments[0].values.length) {\n        return;\n    }\n    const { context, radius } = data;\n    context.moveTo(path.segments[0].values[0].x * radius, path.segments[0].values[0].y * radius);\n    for (const segment of path.segments) {\n        context.bezierCurveTo(segment.values[1].x * radius, segment.values[1].y * radius, segment.values[2].x * radius, segment.values[2].y * radius, segment.values[3].x * radius, segment.values[3].y * radius);\n    }\n    for (let i = path.segments.length - 1; i >= 0; i--) {\n        const segment = path.segments[i];\n        context.bezierCurveTo(-segment.values[2].x * radius, segment.values[2].y * radius, -segment.values[1].x * radius, segment.values[1].y * radius, -segment.values[0].x * radius, segment.values[0].y * radius);\n    }\n}\nconst n = 1.0 / 2;\nexport const paths = {\n    heart: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                    { x: n, y: 0 },\n                    { x: n, y: -n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n, y: -n / 2 },\n                    { x: n, y: -n / 2 },\n                    { x: n, y: -n },\n                    { x: n / 2, y: -n },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: -n },\n                    { x: n / 2, y: -n },\n                    { x: 0, y: -n },\n                    { x: 0, y: -n / 2 },\n                ],\n            },\n        ],\n    },\n    diamond: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                    { x: (3 * n) / 4, y: 0 },\n                    { x: (3 * n) / 4, y: 0 },\n                ],\n            },\n            {\n                values: [\n                    { x: (3 * n) / 4, y: 0 },\n                    { x: (3 * n) / 4, y: 0 },\n                    { x: 0, y: -n },\n                    { x: 0, y: -n },\n                ],\n            },\n        ],\n    },\n    club: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: -n },\n                    { x: 0, y: -n },\n                    { x: n / 2, y: -n },\n                    { x: n / 2, y: -n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: -n / 2 },\n                    { x: n / 2, y: -n / 2 },\n                    { x: n, y: -n / 2 },\n                    { x: n, y: 0 },\n                ],\n            },\n            {\n                values: [\n                    { x: n, y: 0 },\n                    { x: n, y: 0 },\n                    { x: n, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 8, y: n / 8 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 8, y: n / 8 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                ],\n            },\n        ],\n    },\n    spade: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: -n },\n                    { x: 0, y: -n },\n                    { x: n, y: -n / 2 },\n                    { x: n, y: 0 },\n                ],\n            },\n            {\n                values: [\n                    { x: n, y: 0 },\n                    { x: n, y: 0 },\n                    { x: n, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 8, y: n / 8 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 8, y: n / 8 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                ],\n            },\n        ],\n    },\n};\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class ClubDrawer {\n    constructor() {\n        this.validTypes = [\"club\", \"clubs\"];\n    }\n    draw(data) {\n        drawPath(data, paths.club);\n    }\n}\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class DiamondDrawer {\n    constructor() {\n        this.validTypes = [\"diamond\", \"diamonds\"];\n    }\n    draw(data) {\n        drawPath(data, paths.diamond);\n    }\n}\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class HeartDrawer {\n    constructor() {\n        this.validTypes = [\"heart\", \"hearts\"];\n    }\n    draw(data) {\n        drawPath(data, paths.heart);\n    }\n}\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class SpadeDrawer {\n    constructor() {\n        this.validTypes = [\"spade\", \"spades\"];\n    }\n    draw(data) {\n        drawPath(data, paths.spade);\n    }\n}\n", "import { ClubDrawer } from \"./ClubDrawer.js\";\nimport { DiamondDrawer } from \"./DiamondDrawer.js\";\nimport { HeartDrawer } from \"./HeartDrawer.js\";\nimport { SpadeDrawer } from \"./SpadeDrawer.js\";\nexport async function loadCardsShape(engine, refresh = true) {\n    await engine.addShape(new SpadeDrawer(), refresh);\n    await engine.addShape(new HeartDrawer(), refresh);\n    await engine.addShape(new DiamondDrawer(), refresh);\n    await engine.addShape(new ClubDrawer(), refresh);\n}\n", "export function drawEmoji(data) {\n    const { context, particle, radius, opacity } = data, emojiData = particle.emojiData, double = 2, diameter = radius * double, previousAlpha = context.globalAlpha;\n    if (!emojiData) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(emojiData, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n", "import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"';\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, emojiData] of this._emojiShapeDict) {\n            if (emojiData instanceof ImageBitmap) {\n                emojiData?.close();\n                this._emojiShapeDict.delete(key);\n            }\n        }\n    }\n    draw(data) {\n        drawEmoji(data);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        delete particle.emojiData;\n    }\n    particleInit(container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData), font = shapeData.font ?? defaultFont;\n        if (!emoji) {\n            return;\n        }\n        const key = `${emoji}_${font}`, existingData = this._emojiShapeDict.get(key);\n        if (existingData) {\n            particle.emojiData = existingData;\n            return;\n        }\n        const canvasSize = getRangeMax(particle.size.value) * double;\n        let emojiData;\n        const maxSize = getRangeMax(particle.size.value);\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(emoji, maxSize, maxSize);\n            emojiData = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(emoji, maxSize, maxSize);\n            emojiData = canvas;\n        }\n        this._emojiShapeDict.set(key, emojiData);\n        particle.emojiData = emojiData;\n    }\n}\n", "import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n", "const half = 0.5, double = 2;\nexport function drawHeart(data) {\n    const { context, radius } = data, diameter = radius * double, halfRadius = radius * half, radiusAndHalf = radius + halfRadius, x = -radius, y = -radius;\n    context.moveTo(x, y + halfRadius);\n    context.quadraticCurveTo(x, y, x + halfRadius, y);\n    context.quadraticCurveTo(x + radius, y, x + radius, y + halfRadius);\n    context.quadraticCurveTo(x + radius, y, x + radiusAndHalf, y);\n    context.quadraticCurveTo(x + diameter, y, x + diameter, y + halfRadius);\n    context.quadraticCurveTo(x + diameter, y + radius, x + radiusAndHalf, y + radiusAndHalf);\n    context.lineTo(x + radius, y + diameter);\n    context.lineTo(x + halfRadius, y + radiusAndHalf);\n    context.quadraticCurveTo(x, y + radius, x, y + halfRadius);\n}\n", "import { drawHeart } from \"./Utils.js\";\nexport class HeartDrawer {\n    constructor() {\n        this.validTypes = [\"heart\"];\n    }\n    draw(data) {\n        drawHeart(data);\n    }\n}\n", "import { HeartDrawer } from \"./HeartDrawer.js\";\nexport async function loadHeartShape(engine, refresh = true) {\n    await engine.addShape(new HeartDrawer(), refresh);\n}\n", "import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n", "export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n", "export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n", "export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n", "export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n", "import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n", "import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : image.ratio ?? defaultRatio,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n", "export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n", "import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n", "import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n", "import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n", "import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n", "export class MotionReduce {\n    constructor() {\n        this.factor = 4;\n        this.value = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { MotionReduce } from \"./MotionReduce.js\";\nexport class Motion {\n    constructor() {\n        this.disable = false;\n        this.reduce = new MotionReduce();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.disable !== undefined) {\n            this.disable = data.disable;\n        }\n        this.reduce.load(data.reduce);\n    }\n}\n", "import { safeMatchMedia } from \"@tsparticles/engine\";\nconst defaultFactor = 1, defaultReduce = 0, identity = 1;\nexport class MotionInstance {\n    constructor(container, engine) {\n        this._handleMotionChange = mediaQuery => {\n            const container = this._container, motion = container.actualOptions.motion;\n            if (!motion) {\n                return;\n            }\n            if (mediaQuery.matches) {\n                if (motion.disable) {\n                    container.retina.reduceFactor = defaultReduce;\n                }\n                else {\n                    container.retina.reduceFactor = motion.reduce.value ? identity / motion.reduce.factor : defaultFactor;\n                }\n            }\n            else {\n                container.retina.reduceFactor = 1;\n            }\n        };\n        this._container = container;\n        this._engine = engine;\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions.motion;\n        if (!(options && (options.disable || options.reduce.value))) {\n            container.retina.reduceFactor = 1;\n            return;\n        }\n        const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n        if (!mediaQuery) {\n            container.retina.reduceFactor = defaultFactor;\n            return;\n        }\n        this._handleMotionChange(mediaQuery);\n        const handleChange = () => {\n            void (async () => {\n                this._handleMotionChange(mediaQuery);\n                try {\n                    await container.refresh();\n                }\n                catch {\n                }\n            })();\n        };\n        if (mediaQuery.addEventListener !== undefined) {\n            mediaQuery.addEventListener(\"change\", handleChange);\n        }\n        else if (mediaQuery.addListener !== undefined) {\n            mediaQuery.addListener(handleChange);\n        }\n        await Promise.resolve();\n    }\n}\n", "import { Motion } from \"./Options/Classes/Motion.js\";\nimport { MotionInstance } from \"./MotionInstance.js\";\nexport class MotionPlugin {\n    constructor(engine) {\n        this.id = \"motion\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new MotionInstance(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin()) {\n            return;\n        }\n        let motionOptions = options.motion;\n        if (!motionOptions?.load) {\n            options.motion = motionOptions = new Motion();\n        }\n        motionOptions.load(source?.motion);\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { MotionPlugin } from \"./MotionPlugin.js\";\nexport async function loadMotionPlugin(engine, refresh = true) {\n    await engine.addPlugin(new MotionPlugin(engine), refresh);\n}\n", "import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n", "import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n", "import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n", "export var RollMode;\n(function (RollMode) {\n    RollMode[\"both\"] = \"both\";\n    RollMode[\"horizontal\"] = \"horizontal\";\n    RollMode[\"vertical\"] = \"vertical\";\n})(RollMode || (RollMode = {}));\n", "import { AlterType, getRandom, getRangeValue, halfRandom, rangeColorToHsl } from \"@tsparticles/engine\";\nimport { RollMode } from \"./RollMode.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport function initParticle(particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === RollMode.horizontal || rollOpt.mode === RollMode.both,\n        vertical: rollOpt.mode === RollMode.vertical || rollOpt.mode === RollMode.both,\n        angle: getRandom() * doublePI,\n        speed: getRangeValue(rollOpt.speed) / maxAngle,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= halfRandom ? AlterType.darken : AlterType.enlighten;\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: AlterType.darken,\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: AlterType.enlighten,\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = doublePI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n", "import { setRangeValue } from \"@tsparticles/engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { OptionsColor, setRangeValue, } from \"@tsparticles/engine\";\nimport { RollLight } from \"./RollLight.js\";\nimport { RollMode } from \"../../RollMode.js\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = RollMode.vertical;\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n", "import { initParticle, updateRoll } from \"./Utils.js\";\nimport { Roll } from \"./Options/Classes/Roll.js\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n", "import { RollUpdater } from \"./RollUpdater.js\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"roll\", () => {\n        return Promise.resolve(new RollUpdater());\n    }, refresh);\n}\n", "import { setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { RotateDirection, ValueWithRandom, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n", "import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n", "import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n", "const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n", "import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n", "import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n", "const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n", "import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n", "import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(new StarDrawer(), refresh);\n}\n", "export var TiltDirection;\n(function (TiltDirection) {\n    TiltDirection[\"clockwise\"] = \"clockwise\";\n    TiltDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    TiltDirection[\"random\"] = \"random\";\n})(TiltDirection || (TiltDirection = {}));\n", "import { setRangeValue } from \"@tsparticles/engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"@tsparticles/engine\";\nimport { TiltDirection } from \"../../TiltDirection.js\";\nimport { TiltAnimation } from \"./TiltAnimation.js\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = TiltDirection.clockwise;\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { AnimationStatus, DestroyType, degToRad, getRandom, getRangeValue, halfRandom, updateAnimation, } from \"@tsparticles/engine\";\nimport { Tilt } from \"./Options/Classes/Tilt.js\";\nimport { TiltDirection } from \"./TiltDirection.js\";\nconst identity = 1, double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: degToRad(getRangeValue(tiltOptions.value)),\n            sinDirection: getRandom() >= halfRandom ? identity : -identity,\n            cosDirection: getRandom() >= halfRandom ? identity : -identity,\n            min: 0,\n            max: doublePI,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === TiltDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            tiltDirection = index > minIndex ? TiltDirection.counterClockwise : TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = AnimationStatus.decreasing;\n                break;\n            case TiltDirection.clockwise:\n                particle.tilt.status = AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = identity - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity =\n                (getRangeValue(tiltAnimation.speed) / maxAngle) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.tilt) {\n            return;\n        }\n        updateAnimation(particle, particle.tilt, false, DestroyType.none, delta);\n        await Promise.resolve();\n    }\n}\n", "import { TiltUpdater } from \"./TiltUpdater.js\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"tilt\", container => {\n        return Promise.resolve(new TiltUpdater(container));\n    }, refresh);\n}\n", "import { setRangeValue } from \"@tsparticles/engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n", "import { isNumber, setRangeValue, } from \"@tsparticles/engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed.js\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n", "import { millisecondsToSeconds } from \"@tsparticles/engine\";\nconst defaultDistance = 0, double = 2, doublePI = Math.PI * double, distanceFactor = 60;\nexport function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? defaultDistance) * delta.factor)) /\n        (millisecondsToSeconds / distanceFactor), max = doublePI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n", "import { getRandom, getRangeValue, } from \"@tsparticles/engine\";\nimport { Wobble } from \"./Options/Classes/Wobble.js\";\nimport { updateWobble } from \"./Utils.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360, moveSpeedFactor = 10, defaultDistance = 0;\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * doublePI,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / maxAngle,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / moveSpeedFactor,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance =\n            getRangeValue(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n", "import { WobbleUpdater } from \"./WobbleUpdater.js\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"wobble\", container => {\n        return Promise.resolve(new WobbleUpdater(container));\n    }, refresh);\n}\n", "import { isSsr, isString, millisecondsToSeconds, tsParticles, } from \"@tsparticles/engine\";\nimport { loadEmittersPlugin } from \"@tsparticles/plugin-emitters\";\nimport { ConfettiOptions } from \"./ConfettiOptions.js\";\nimport { loadBasic } from \"@tsparticles/basic\";\nimport { loadCardsShape } from \"@tsparticles/shape-cards\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadHeartShape } from \"@tsparticles/shape-heart\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadMotionPlugin } from \"@tsparticles/plugin-motion\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRollUpdater } from \"@tsparticles/updater-roll\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadTiltUpdater } from \"@tsparticles/updater-tilt\";\nimport { loadWobbleUpdater } from \"@tsparticles/updater-wobble\";\nconst defaultGravity = 9.81, sizeFactor = 5, speedFactor = 3, decayOffset = 1, disableRotate = 0, disableTilt = 0;\nlet initialized = false;\nlet initializing = false;\nconst ids = new Map();\nasync function initPlugins(engine) {\n    if (initialized) {\n        return;\n    }\n    if (initializing) {\n        return new Promise(resolve => {\n            const timeout = 100, interval = setInterval(() => {\n                if (!initialized) {\n                    return;\n                }\n                clearInterval(interval);\n                resolve();\n            }, timeout);\n        });\n    }\n    initializing = true;\n    await loadEmittersPlugin(engine, false);\n    await loadMotionPlugin(engine, false);\n    await loadCardsShape(engine, false);\n    await loadHeartShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadBasic(engine);\n    initializing = false;\n    initialized = true;\n}\nasync function setConfetti(params) {\n    const actualOptions = new ConfettiOptions();\n    actualOptions.load(params.options);\n    let container;\n    const fpsLimit = 120, fpsLimitFactor = 3.6, opacitySpeed = (actualOptions.ticks * millisecondsToSeconds) / (fpsLimitFactor * millisecondsToSeconds * fpsLimit);\n    if (ids.has(params.id)) {\n        container = ids.get(params.id);\n        if (container && !container.destroyed) {\n            const alias = container;\n            if (alias.addEmitter) {\n                await alias.addEmitter({\n                    startCount: actualOptions.count,\n                    position: actualOptions.position,\n                    size: {\n                        width: 0,\n                        height: 0,\n                    },\n                    rate: {\n                        delay: 0,\n                        quantity: 0,\n                    },\n                    life: {\n                        duration: 0.1,\n                        count: 1,\n                    },\n                    particles: {\n                        color: {\n                            value: actualOptions.colors,\n                        },\n                        shape: {\n                            type: actualOptions.shapes,\n                            options: actualOptions.shapeOptions,\n                        },\n                        life: {\n                            count: 1,\n                        },\n                        opacity: {\n                            value: { min: 0, max: 1 },\n                            animation: {\n                                enable: true,\n                                sync: true,\n                                speed: opacitySpeed,\n                                startValue: \"max\",\n                                destroy: \"min\",\n                            },\n                        },\n                        size: {\n                            value: sizeFactor * actualOptions.scalar,\n                        },\n                        move: {\n                            angle: {\n                                value: actualOptions.spread,\n                                offset: 0,\n                            },\n                            drift: {\n                                min: -actualOptions.drift,\n                                max: actualOptions.drift,\n                            },\n                            gravity: {\n                                acceleration: actualOptions.gravity * defaultGravity,\n                            },\n                            speed: actualOptions.startVelocity * speedFactor,\n                            decay: decayOffset - actualOptions.decay,\n                            direction: -actualOptions.angle,\n                        },\n                        rotate: {\n                            value: actualOptions.flat\n                                ? disableRotate\n                                : {\n                                    min: 0,\n                                    max: 360,\n                                },\n                            direction: \"random\",\n                            animation: {\n                                enable: !actualOptions.flat,\n                                speed: 60,\n                            },\n                        },\n                        tilt: {\n                            direction: \"random\",\n                            enable: !actualOptions.flat,\n                            value: actualOptions.flat\n                                ? disableTilt\n                                : {\n                                    min: 0,\n                                    max: 360,\n                                },\n                            animation: {\n                                enable: true,\n                                speed: 60,\n                            },\n                        },\n                        roll: {\n                            darken: {\n                                enable: true,\n                                value: 25,\n                            },\n                            enable: !actualOptions.flat,\n                            speed: {\n                                min: 15,\n                                max: 25,\n                            },\n                        },\n                        wobble: {\n                            distance: 30,\n                            enable: !actualOptions.flat,\n                            speed: {\n                                min: -15,\n                                max: 15,\n                            },\n                        },\n                    },\n                });\n                return;\n            }\n        }\n    }\n    const particlesOptions = {\n        fullScreen: {\n            enable: !params.canvas,\n            zIndex: actualOptions.zIndex,\n        },\n        fpsLimit: 120,\n        particles: {\n            number: {\n                value: 0,\n            },\n            color: {\n                value: actualOptions.colors,\n            },\n            shape: {\n                type: actualOptions.shapes,\n                options: actualOptions.shapeOptions,\n            },\n            opacity: {\n                value: { min: 0, max: 1 },\n                animation: {\n                    enable: true,\n                    sync: true,\n                    speed: opacitySpeed,\n                    startValue: \"max\",\n                    destroy: \"min\",\n                },\n            },\n            size: {\n                value: sizeFactor * actualOptions.scalar,\n            },\n            links: {\n                enable: false,\n            },\n            life: {\n                count: 1,\n            },\n            move: {\n                angle: {\n                    value: actualOptions.spread,\n                    offset: 0,\n                },\n                drift: {\n                    min: -actualOptions.drift,\n                    max: actualOptions.drift,\n                },\n                enable: true,\n                gravity: {\n                    enable: true,\n                    acceleration: actualOptions.gravity * defaultGravity,\n                },\n                speed: actualOptions.startVelocity * speedFactor,\n                decay: decayOffset - actualOptions.decay,\n                direction: -actualOptions.angle,\n                random: true,\n                straight: false,\n                outModes: {\n                    default: \"none\",\n                    bottom: \"destroy\",\n                },\n            },\n            rotate: {\n                value: actualOptions.flat\n                    ? disableRotate\n                    : {\n                        min: 0,\n                        max: 360,\n                    },\n                direction: \"random\",\n                animation: {\n                    enable: !actualOptions.flat,\n                    speed: 60,\n                },\n            },\n            tilt: {\n                direction: \"random\",\n                enable: !actualOptions.flat,\n                value: actualOptions.flat\n                    ? disableTilt\n                    : {\n                        min: 0,\n                        max: 360,\n                    },\n                animation: {\n                    enable: true,\n                    speed: 60,\n                },\n            },\n            roll: {\n                darken: {\n                    enable: true,\n                    value: 25,\n                },\n                enable: !actualOptions.flat,\n                speed: {\n                    min: 15,\n                    max: 25,\n                },\n            },\n            wobble: {\n                distance: 30,\n                enable: !actualOptions.flat,\n                speed: {\n                    min: -15,\n                    max: 15,\n                },\n            },\n        },\n        detectRetina: true,\n        motion: {\n            disable: actualOptions.disableForReducedMotion,\n        },\n        emitters: {\n            name: \"confetti\",\n            startCount: actualOptions.count,\n            position: actualOptions.position,\n            size: {\n                width: 0,\n                height: 0,\n            },\n            rate: {\n                delay: 0,\n                quantity: 0,\n            },\n            life: {\n                duration: 0.1,\n                count: 1,\n            },\n        },\n    };\n    container = await tsParticles.load({ id: params.id, element: params.canvas, options: particlesOptions });\n    ids.set(params.id, container);\n    return container;\n}\nexport async function confetti(idOrOptions, confettiOptions) {\n    await initPlugins(tsParticles);\n    let options;\n    let id;\n    if (isString(idOrOptions)) {\n        id = idOrOptions;\n        options = confettiOptions ?? {};\n    }\n    else {\n        id = \"confetti\";\n        options = idOrOptions;\n    }\n    return setConfetti({\n        id,\n        options,\n    });\n}\nconfetti.create = async (canvas, options) => {\n    if (!canvas) {\n        return confetti;\n    }\n    await initPlugins(tsParticles);\n    const id = canvas.getAttribute(\"id\") ?? \"confetti\";\n    canvas.setAttribute(\"id\", id);\n    return async (idOrOptions, confettiOptions) => {\n        let subOptions;\n        let subId;\n        if (isString(idOrOptions)) {\n            subId = idOrOptions;\n            subOptions = confettiOptions ?? options;\n        }\n        else {\n            subId = id;\n            subOptions = idOrOptions;\n        }\n        return setConfetti({\n            id: subId,\n            canvas,\n            options: subOptions,\n        });\n    };\n};\nconfetti.init = async () => {\n    await initPlugins(tsParticles);\n};\nconfetti.version = tsParticles.version;\nif (!isSsr()) {\n    window.confetti = confetti;\n}\n"],
  "mappings": "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",
  "names": ["MoveDirection", "n", "squareExp", "half", "defaultAlpha", "AnimationMode", "AnimationStatus", "DestroyType", "OutModeDirection", "PixelMode", "StartValueType", "decayOffset", "minLoops", "identity", "minVelocity", "AlterType", "RgbIndexes", "defaultAlpha", "half", "double", "half", "double", "temp1", "temp2", "defaultOpacity", "decayOffset", "minLoops", "identity", "minVelocity", "origin", "origin", "identity", "defaultOpacity", "InteractivityDetect", "double", "container", "theme", "EventType", "DivType", "ResponsiveMode", "ThemeMode", "CollisionMode", "OutMode", "LimitMode", "InteractorType", "ParticleOutType", "double", "squareExp", "container", "decayOffset", "RangeType", "squareExp", "half", "double", "capacity", "squareExp", "sizeFactor", "container", "defaultFactor", "firstIndex", "HslIndexes", "defaultAlpha", "RgbIndexes", "defaultAlpha", "RotateDirection", "GradientType", "EasingType", "EmitterClickMode", "half", "_a", "_b", "minLifeCount", "container", "origin", "half", "spinFactor", "minVelocity", "sizeFactor", "double", "doublePI", "origin", "minAngle", "minVelocity", "minVelocity", "minVelocity", "minVelocity", "double", "double", "half", "double", "HeartDrawer", "HeartDrawer", "DisposalMethod", "GIFDataHeaders", "origin", "half", "double", "sides", "defaultRatio", "noTime", "identity", "infiniteValue", "identity", "container", "origin", "sides", "yFactor", "sides", "double", "RollMode", "double", "doublePI", "maxAngle", "double", "doublePI", "identity", "double", "sides", "origin", "sides", "defaultInset", "defaultSides", "TiltDirection", "identity", "double", "doublePI", "maxAngle", "double", "doublePI", "double", "doublePI", "maxAngle", "moveSpeedFactor", "defaultDistance"]
}
